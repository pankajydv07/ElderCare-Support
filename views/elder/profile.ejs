<% layout('layouts/main') -%>

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <div class="d-flex align-items-center mb-4">
                <div class="me-3">
                    <div class="bg-primary rounded-circle d-flex align-items-center justify-content-center" style="width: 80px; height: 80px;">
                        <i class="bi bi-person text-white" style="font-size: 2.5rem;"></i>
                    </div>
                </div>
                <div>
                    <h1 class="h3 mb-1"><%= elder.name %></h1>
                    <p class="text-muted mb-0">Elder Member</p>
                    <small class="text-muted">Member since <%= new Date(stats.memberSince).toLocaleDateString() %></small>
                </div>
            </div>

            <!-- Success/Error Messages -->
            <% if (success) { %>
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    <i class="bi bi-check-circle me-2"></i><%= success %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            <% } %>

            <% if (error) { %>
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <i class="bi bi-exclamation-triangle me-2"></i><%= error %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            <% } %>

            <!-- Profile Stats -->
            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-primary mb-1"><%= stats.totalRequests %></h3>
                            <small class="text-muted">Total Requests</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-success mb-1"><%= stats.completedRequests %></h3>
                            <small class="text-muted">Completed</small>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card text-center">
                        <div class="card-body">
                            <h3 class="text-info mb-1"><%= Math.floor((new Date() - new Date(stats.memberSince)) / (1000 * 60 * 60 * 24)) %></h3>
                            <small class="text-muted">Days as Member</small>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Profile Form -->
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="bi bi-person-gear me-2"></i>Profile Information</h5>
                    <button type="button" class="btn btn-outline-primary btn-sm" onclick="toggleEditMode()">
                        <i class="bi bi-pencil me-1"></i><span id="editButtonText">Edit Profile</span>
                    </button>
                </div>
                <div class="card-body">
                    <form id="profileForm" method="POST" action="/elder/profile">
                        <input type="hidden" name="_method" value="PUT">
                        
                        <div class="row">
                            <!-- Personal Information -->
                            <div class="col-md-6">
                                <h6 class="text-primary mb-3">Personal Information</h6>
                                
                                <div class="mb-3">
                                    <label for="name" class="form-label">Full Name</label>
                                    <input type="text" class="form-control profile-input" id="name" name="name" 
                                           value="<%= elder.name %>" readonly>
                                </div>

                                <div class="mb-3">
                                    <label for="email" class="form-label">Email</label>
                                    <input type="email" class="form-control profile-input" id="email" name="email" 
                                           value="<%= elder.email %>" readonly>
                                </div>

                                <div class="mb-3">
                                    <label for="phone" class="form-label">Phone Number</label>
                                    <input type="tel" class="form-control profile-input" id="phone" name="phone" 
                                           value="<%= elder.phone || '' %>" readonly>
                                </div>

                                <div class="mb-3">
                                    <label for="address" class="form-label">Address</label>
                                    <div class="input-group">
                                        <input type="text" class="form-control profile-input" id="address" name="address" 
                                               value="<%= elder.address && elder.address.street ? elder.address.street : (elder.address || '') %>" readonly>
                                        <button type="button" class="btn btn-outline-secondary edit-only" id="detectLocation" style="display: none;">
                                            <i class="bi bi-geo-alt-fill"></i> Detect Location
                                        </button>
                                        <button type="button" class="btn btn-outline-primary edit-only" id="editLocationBtn" style="display: none;">
                                            <i class="bi bi-map"></i> Edit on Map
                                        </button>
                                    </div>
                                </div>

                                <div class="mb-3">
                                    <label for="city" class="form-label">City</label>
                                    <input type="text" class="form-control profile-input" id="city" name="city" 
                                           value="<%= elder.address && elder.address.city ? elder.address.city : (elder.city || '') %>" readonly>
                                </div>

                                <!-- Hidden fields for coordinates -->
                                <input type="hidden" id="latitude" name="latitude" value="<%= elder.address && elder.address.coordinates ? elder.address.coordinates.latitude : '' %>">
                                <input type="hidden" id="longitude" name="longitude" value="<%= elder.address && elder.address.coordinates ? elder.address.coordinates.longitude : '' %>">
                                <input type="hidden" id="state" name="state" value="<%= elder.address && elder.address.state ? elder.address.state : '' %>">
                                <input type="hidden" id="zipCode" name="zipCode" value="<%= elder.address && elder.address.zipCode ? elder.address.zipCode : '' %>">

                                <!-- Map Container -->
                                <div id="mapContainer" style="display: none;" class="edit-only">
                                    <div class="mb-3">
                                        <label for="mapSearch" class="form-label">
                                            <i class="bi bi-search"></i> Search Location
                                        </label>
                                        <input type="text" class="form-control" id="mapSearch" placeholder="Search for a location...">
                                    </div>
                                    
                                    <div id="map" style="height: 300px; margin-bottom: 15px; border-radius: 8px; border: 2px solid #e9ecef; cursor: crosshair;"></div>
                                    
                                    <div class="text-center mb-3">
                                        <small class="text-muted">
                                            <i class="bi bi-hand-index"></i> Click on the map or drag the marker to set your location
                                        </small>
                                    </div>
                                </div>
                            </div>

                            <!-- Emergency & Preferences -->
                            <div class="col-md-6">
                                <h6 class="text-primary mb-3">Emergency Contact & Preferences</h6>
                                
                                <div class="mb-3">
                                    <label for="emergencyContact" class="form-label">Emergency Contact Name</label>
                                    <input type="text" class="form-control profile-input" id="emergencyContact" name="emergencyContact" 
                                           value="<%= elder.emergencyContact || '' %>" readonly>
                                </div>

                                <div class="mb-3">
                                    <label for="emergencyPhone" class="form-label">Emergency Contact Phone</label>
                                    <input type="tel" class="form-control profile-input" id="emergencyPhone" name="emergencyPhone" 
                                           value="<%= elder.emergencyPhone || '' %>" readonly>
                                </div>

                                <div class="mb-3">
                                    <label for="preferences" class="form-label">Care Preferences</label>
                                    <textarea class="form-control profile-input" id="preferences" name="preferences" 
                                              rows="4" readonly><%= elder.preferences || '' %></textarea>
                                    <div class="form-text">
                                        Special instructions, dietary restrictions, mobility needs, etc.
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Form Actions -->
                        <div class="d-flex justify-content-end mt-4" id="formActions" style="display: none;">
                            <button type="button" class="btn btn-secondary me-2" onclick="cancelEdit()">
                                <i class="bi bi-x-circle me-1"></i>Cancel
                            </button>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-circle me-1"></i>Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let isEditMode = false;

    function toggleEditMode() {
        isEditMode = !isEditMode;
        const inputs = document.querySelectorAll('.profile-input');
        const formActions = document.getElementById('formActions');
        const editButton = document.getElementById('editButtonText');
        const editOnlyElements = document.querySelectorAll('.edit-only');

        if (isEditMode) {
            inputs.forEach(input => input.removeAttribute('readonly'));
            formActions.style.display = 'flex';
            editButton.textContent = 'Cancel Edit';
            editOnlyElements.forEach(el => el.style.display = 'block');
            
            // Setup location functionality when entering edit mode
            if (typeof google !== 'undefined' && google.maps) {
                setupLocationFunctionality();
            }
        } else {
            inputs.forEach(input => input.setAttribute('readonly', true));
            formActions.style.display = 'none';
            editButton.textContent = 'Edit Profile';
            editOnlyElements.forEach(el => el.style.display = 'none');
            
            // Hide map container
            document.getElementById('mapContainer').style.display = 'none';
        }
    }

    function cancelEdit() {
        location.reload(); // Reset form to original values
    }

    // Add method override for PUT request
    document.getElementById('profileForm').addEventListener('submit', function(e) {
        if (!isEditMode) {
            e.preventDefault();
            return false;
        }
    });

    // Location functionality
    let map, marker, geocoder;

    function setupLocationFunctionality() {
        geocoder = new google.maps.Geocoder();
        
        // Setup detect location button
        document.getElementById('detectLocation').addEventListener('click', detectCurrentLocation);
        
        // Setup edit location button
        document.getElementById('editLocationBtn').addEventListener('click', showLocationMap);
    }

    function detectCurrentLocation() {
        const button = document.getElementById('detectLocation');
        
        if (!navigator.geolocation) {
            alert('Geolocation is not supported by this browser.');
            return;
        }
        
        // Show loading state
        button.innerHTML = '<i class="bi bi-arrow-clockwise spin"></i> Detecting...';
        button.disabled = true;
        
        navigator.geolocation.getCurrentPosition(
            (position) => {
                const lat = position.coords.latitude;
                const lng = position.coords.longitude;
                
                // Reverse geocode to get address
                geocoder.geocode({ location: { lat, lng } }, (results, status) => {
                    if (status === 'OK' && results[0]) {
                        updateLocationFields(lat, lng, results[0]);
                        showLocationMap(lat, lng);
                    } else {
                        alert('Unable to retrieve your address. Please try the map editor.');
                    }
                    
                    // Restore button
                    button.innerHTML = '<i class="bi bi-geo-alt-fill"></i> Detect Location';
                    button.disabled = false;
                });
            },
            (error) => {
                let errorMessage = 'Error getting your location: ';
                switch(error.code) {
                    case error.PERMISSION_DENIED:
                        errorMessage += 'Location access denied.';
                        break;
                    case error.POSITION_UNAVAILABLE:
                        errorMessage += 'Location information unavailable.';
                        break;
                    case error.TIMEOUT:
                        errorMessage += 'Location request timed out.';
                        break;
                    default:
                        errorMessage += 'Unknown error.';
                        break;
                }
                alert(errorMessage);
                button.innerHTML = '<i class="bi bi-geo-alt-fill"></i> Detect Location';
                button.disabled = false;
            }
        );
    }

    function showLocationMap(lat = null, lng = null) {
        const mapContainer = document.getElementById('mapContainer');
        const mapDiv = document.getElementById('map');
        
        mapContainer.style.display = 'block';
        
        // Use current coordinates or default location
        const currentLat = lat || parseFloat(document.getElementById('latitude').value) || 40.7128;
        const currentLng = lng || parseFloat(document.getElementById('longitude').value) || -74.0060;
        
        map = new google.maps.Map(mapDiv, {
            center: { lat: currentLat, lng: currentLng },
            zoom: 15,
            mapTypeControl: true,
            streetViewControl: true,
            fullscreenControl: true
        });
        
        // Setup map search
        setupMapSearch();
        
        // Add click listener to map
        map.addListener('click', (event) => {
            const clickedLat = event.latLng.lat();
            const clickedLng = event.latLng.lng();
            
            updateMarkerPosition(clickedLat, clickedLng);
            
            // Reverse geocode
            geocoder.geocode({ location: { lat: clickedLat, lng: clickedLng } }, (results, status) => {
                if (status === 'OK' && results[0]) {
                    updateLocationFields(clickedLat, clickedLng, results[0]);
                }
            });
        });
        
        // Create initial marker
        updateMarkerPosition(currentLat, currentLng);
    }

    function setupMapSearch() {
        const searchBox = document.getElementById('mapSearch');
        
        if (!searchBox || !map) return;
        
        const searchAutocomplete = new google.maps.places.Autocomplete(searchBox, {
            types: ['address'],
            componentRestrictions: { country: 'us' }
        });
        
        searchAutocomplete.bindTo('bounds', map);
        
        searchAutocomplete.addListener('place_changed', () => {
            const place = searchAutocomplete.getPlace();
            
            if (!place.geometry || !place.geometry.location) {
                return;
            }
            
            const lat = place.geometry.location.lat();
            const lng = place.geometry.location.lng();
            
            map.setCenter({ lat, lng });
            map.setZoom(17);
            
            updateMarkerPosition(lat, lng);
            updateLocationFields(lat, lng, place);
        });
    }

    function updateMarkerPosition(lat, lng) {
        if (marker) {
            marker.setMap(null);
        }
        
        marker = new google.maps.Marker({
            position: { lat: lat, lng: lng },
            map: map,
            title: 'Your Location',
            draggable: true,
            icon: {
                url: 'data:image/svg+xml;base64,' + btoa(`
                    <svg xmlns="http://www.w3.org/2000/svg" width="32" height="32" fill="#dc3545" viewBox="0 0 16 16">
                        <path d="M8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z"/>
                        <circle cx="8" cy="6" r="2" fill="white"/>
                    </svg>
                `),
                scaledSize: new google.maps.Size(32, 32)
            }
        });
        
        marker.addListener('dragend', (event) => {
            const newLat = event.latLng.lat();
            const newLng = event.latLng.lng();
            
            geocoder.geocode({ location: { lat: newLat, lng: newLng } }, (results, status) => {
                if (status === 'OK' && results[0]) {
                    updateLocationFields(newLat, newLng, results[0]);
                }
            });
        });
    }

    function updateLocationFields(lat, lng, place) {
        // Update coordinates
        document.getElementById('latitude').value = lat;
        document.getElementById('longitude').value = lng;
        
        // Update address fields
        document.getElementById('address').value = place.formatted_address;
        
        // Extract components
        let city = '', state = '', zipCode = '';
        if (place.address_components) {
            for (const component of place.address_components) {
                const componentType = component.types[0];
                switch (componentType) {
                    case 'locality':
                        city = component.long_name;
                        break;
                    case 'administrative_area_level_1':
                        state = component.short_name;
                        break;
                    case 'postal_code':
                        zipCode = component.long_name;
                        break;
                }
            }
        }
        
        document.getElementById('city').value = city;
        document.getElementById('state').value = state;
        document.getElementById('zipCode').value = zipCode;
    }
</script>

<!-- Google Maps API -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC2xQm4wEp_G-7J5Nr3HEO58kMBy56BcWE&libraries=places" async defer></script>

<style>
    .profile-input[readonly] {
        background-color: #f8f9fa;
        border-color: #e9ecef;
    }
    
    .profile-input:not([readonly]) {
        background-color: white;
        border-color: #0d6efd;
    }
    
    .card {
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    /* Loading animation */
    @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
    }

    .spin {
        animation: spin 1s linear infinite;
    }

    /* Map styling */
    #map {
        transition: border-color 0.3s ease;
    }

    #map:hover {
        border-color: #007bff;
    }

    /* Map search styling */
    #mapSearch {
        border-radius: 20px;
        padding-left: 40px;
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' fill='%236c757d' viewBox='0 0 16 16'%3E%3Cpath d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z'%3E%3C/path%3E%3C/svg%3E");
        background-repeat: no-repeat;
        background-position: 12px center;
        background-size: 16px;
    }

    /* Edit only elements */
    .edit-only {
        animation: fadeIn 0.3s ease-in;
    }

    @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-10px); }
        to { opacity: 1; transform: translateY(0); }
    }
</style>
